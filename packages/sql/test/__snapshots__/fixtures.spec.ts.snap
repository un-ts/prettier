// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`parser and printer > should format all fixtures > 144.sql 1`] = `
"CREATE TABLE "test" ("id" uuid NOT NULL)
WITH
  (oids = false);
"
`;

exports[`parser and printer > should format all fixtures > 233.sql 1`] = `
"CREATE TABLE "test" ("id" uuid NOT NULL)
WITH
  (oids = false);
"
`;

exports[`parser and printer > should format all fixtures > 277.sql 1`] = `
"SELECT
  *,
  current_date - interval {interval} {period}
FROM
  {database_name}.{table_name}
"
`;

exports[`parser and printer > should format all fixtures > 279.sql 1`] = `
"-- create db
CREATE DATABASE test_db;

-- connect test_db
\\c test_db
-- create schema
CREATE SCHEMA test;
"
`;

exports[`parser and printer > should format all fixtures > 291.sql 1`] = `
"BEGIN IF :APEX$ROW_STATUS = 'C' THEN
-- Call the CreateProfessor procedure to insert the new professor
CreateProfessor (
  p_first_name = > :FIRST_NAME,
  p_last_name = > :LAST_NAME,
  p_user_name = > :USER_NAME,
  p_email = > :EMAIL,
  p_department_id = > :DEPARTMENT_ID,
  p_salary = > :SALARY,
  p_work_hours = > :WORK_HOURS,
  p_title = > :TITLE
);

ELSIF :APEX$ROW_STATUS = 'U' THEN
-- Call the UpdateProfessor procedure to update the professor
UpdateProfessor (
  p_user_id = > :USER_ID,
  p_first_name = > :FIRST_NAME,
  p_last_name = > :LAST_NAME,
  p_user_name = > :USER_NAME,
  p_email = > :EMAIL,
  p_department_id = > :DEPARTMENT_ID,
  p_salary = > :SALARY,
  p_work_hours = > :WORK_HOURS,
  p_title = > :TITLE
);

ELSIF :APEX$ROW_STATUS = 'D' THEN
-- Call the DeleteProfessor procedure to delete the professor
DeleteProfessor (p_user_id = > :USER_ID);

END IF;

END;
"
`;

exports[`parser and printer > should format all fixtures > 334.sql 1`] = `
"SELECT
  1::int;
"
`;

exports[`parser and printer > should format all fixtures > basic.sql 1`] = `
"-- this is a comment
SELECT
  *
FROM
  tbl
WHERE
  foo = 'bar';

UPDATE a
SET
  id = 1
WHERE
  name IN (
    SELECT
      name
    FROM
      b
  )
"
`;
