// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`parser and printer > should format all fixtures > 144.sql 1`] = `
"CREATE TABLE
  \\"test\\" (\\"id\\" uuid NOT NULL)
WITH
  (oids = false);
"
`;

exports[`parser and printer > should format all fixtures > 233.sql 1`] = `
"CREATE TABLE
  \\"test\\" (\\"id\\" uuid NOT NULL)
WITH
  (oids = false);
"
`;

exports[`parser and printer > should format all fixtures > 277.sql 1`] = `
[Error: Parse error at token: {table_name} at line 1 column 77
Unexpected CUSTOM_PARAMETER token: {"type":"CUSTOM_PARAMETER","raw":"{table_name}","text":"{table_name}","start":76,"key":"{table_name}"}. Instead, I was expecting to see one of the following:

A LINE_COMMENT token based on:
    comment →  ● %LINE_COMMENT
    _$ebnf$1 → _$ebnf$1 ● comment
    _ →  ● _$ebnf$1
    property_access → expression _ %DOT ● _ property_access$subexpression$1
    asteriskless_andless_expression$subexpression$1 →  ● property_access
    asteriskless_andless_expression →  ● asteriskless_andless_expression$subexpression$1
    asteriskless_free_form_sql$subexpression$1 →  ● asteriskless_andless_expression
    asteriskless_free_form_sql →  ● asteriskless_free_form_sql$subexpression$1
    free_form_sql$subexpression$1 →  ● asteriskless_free_form_sql
    free_form_sql →  ● free_form_sql$subexpression$1
    other_clause$ebnf$1 → other_clause$ebnf$1 ● free_form_sql
    other_clause → %RESERVED_CLAUSE ● other_clause$ebnf$1
    clause$subexpression$1 →  ● other_clause
    clause →  ● clause$subexpression$1
    expressions_or_clauses$ebnf$2 → expressions_or_clauses$ebnf$2 ● clause
    expressions_or_clauses → expressions_or_clauses$ebnf$1 ● expressions_or_clauses$ebnf$2
    statement →  ● expressions_or_clauses statement$subexpression$1
    main$ebnf$1 → main$ebnf$1 ● statement
    main →  ● main$ebnf$1
A BLOCK_COMMENT token based on:
    comment →  ● %BLOCK_COMMENT
    _$ebnf$1 → _$ebnf$1 ● comment
    _ →  ● _$ebnf$1
    property_access → expression _ %DOT ● _ property_access$subexpression$1
    asteriskless_andless_expression$subexpression$1 →  ● property_access
    asteriskless_andless_expression →  ● asteriskless_andless_expression$subexpression$1
    asteriskless_free_form_sql$subexpression$1 →  ● asteriskless_andless_expression
    asteriskless_free_form_sql →  ● asteriskless_free_form_sql$subexpression$1
    free_form_sql$subexpression$1 →  ● asteriskless_free_form_sql
    free_form_sql →  ● free_form_sql$subexpression$1
    other_clause$ebnf$1 → other_clause$ebnf$1 ● free_form_sql
    other_clause → %RESERVED_CLAUSE ● other_clause$ebnf$1
    clause$subexpression$1 →  ● other_clause
    clause →  ● clause$subexpression$1
    expressions_or_clauses$ebnf$2 → expressions_or_clauses$ebnf$2 ● clause
    expressions_or_clauses → expressions_or_clauses$ebnf$1 ● expressions_or_clauses$ebnf$2
    statement →  ● expressions_or_clauses statement$subexpression$1
    main$ebnf$1 → main$ebnf$1 ● statement
    main →  ● main$ebnf$1
A ARRAY_IDENTIFIER token based on:
    array_subscript →  ● %ARRAY_IDENTIFIER _ square_brackets
    property_access$subexpression$1 →  ● array_subscript
    property_access → expression _ %DOT _ ● property_access$subexpression$1
    asteriskless_andless_expression$subexpression$1 →  ● property_access
    asteriskless_andless_expression →  ● asteriskless_andless_expression$subexpression$1
    asteriskless_free_form_sql$subexpression$1 →  ● asteriskless_andless_expression
    asteriskless_free_form_sql →  ● asteriskless_free_form_sql$subexpression$1
    free_form_sql$subexpression$1 →  ● asteriskless_free_form_sql
    free_form_sql →  ● free_form_sql$subexpression$1
    other_clause$ebnf$1 → other_clause$ebnf$1 ● free_form_sql
    other_clause → %RESERVED_CLAUSE ● other_clause$ebnf$1
    clause$subexpression$1 →  ● other_clause
    clause →  ● clause$subexpression$1
    expressions_or_clauses$ebnf$2 → expressions_or_clauses$ebnf$2 ● clause
    expressions_or_clauses → expressions_or_clauses$ebnf$1 ● expressions_or_clauses$ebnf$2
    statement →  ● expressions_or_clauses statement$subexpression$1
    main$ebnf$1 → main$ebnf$1 ● statement
    main →  ● main$ebnf$1
A ARRAY_KEYWORD token based on:
    array_subscript →  ● %ARRAY_KEYWORD _ square_brackets
    property_access$subexpression$1 →  ● array_subscript
    property_access → expression _ %DOT _ ● property_access$subexpression$1
    asteriskless_andless_expression$subexpression$1 →  ● property_access
    asteriskless_andless_expression →  ● asteriskless_andless_expression$subexpression$1
    asteriskless_free_form_sql$subexpression$1 →  ● asteriskless_andless_expression
    asteriskless_free_form_sql →  ● asteriskless_free_form_sql$subexpression$1
    free_form_sql$subexpression$1 →  ● asteriskless_free_form_sql
    free_form_sql →  ● free_form_sql$subexpression$1
    other_clause$ebnf$1 → other_clause$ebnf$1 ● free_form_sql
    other_clause → %RESERVED_CLAUSE ● other_clause$ebnf$1
    clause$subexpression$1 →  ● other_clause
    clause →  ● clause$subexpression$1
    expressions_or_clauses$ebnf$2 → expressions_or_clauses$ebnf$2 ● clause
    expressions_or_clauses → expressions_or_clauses$ebnf$1 ● expressions_or_clauses$ebnf$2
    statement →  ● expressions_or_clauses statement$subexpression$1
    main$ebnf$1 → main$ebnf$1 ● statement
    main →  ● main$ebnf$1
A ASTERISK token based on:
    all_columns_asterisk →  ● %ASTERISK
    property_access$subexpression$1 →  ● all_columns_asterisk
    property_access → expression _ %DOT _ ● property_access$subexpression$1
    asteriskless_andless_expression$subexpression$1 →  ● property_access
    asteriskless_andless_expression →  ● asteriskless_andless_expression$subexpression$1
    asteriskless_free_form_sql$subexpression$1 →  ● asteriskless_andless_expression
    asteriskless_free_form_sql →  ● asteriskless_free_form_sql$subexpression$1
    free_form_sql$subexpression$1 →  ● asteriskless_free_form_sql
    free_form_sql →  ● free_form_sql$subexpression$1
    other_clause$ebnf$1 → other_clause$ebnf$1 ● free_form_sql
    other_clause → %RESERVED_CLAUSE ● other_clause$ebnf$1
    clause$subexpression$1 →  ● other_clause
    clause →  ● clause$subexpression$1
    expressions_or_clauses$ebnf$2 → expressions_or_clauses$ebnf$2 ● clause
    expressions_or_clauses → expressions_or_clauses$ebnf$1 ● expressions_or_clauses$ebnf$2
    statement →  ● expressions_or_clauses statement$subexpression$1
    main$ebnf$1 → main$ebnf$1 ● statement
    main →  ● main$ebnf$1
A IDENTIFIER token based on:
    identifier$subexpression$1 →  ● %IDENTIFIER
    identifier →  ● identifier$subexpression$1
    property_access$subexpression$1 →  ● identifier
    property_access → expression _ %DOT _ ● property_access$subexpression$1
    asteriskless_andless_expression$subexpression$1 →  ● property_access
    asteriskless_andless_expression →  ● asteriskless_andless_expression$subexpression$1
    asteriskless_free_form_sql$subexpression$1 →  ● asteriskless_andless_expression
    asteriskless_free_form_sql →  ● asteriskless_free_form_sql$subexpression$1
    free_form_sql$subexpression$1 →  ● asteriskless_free_form_sql
    free_form_sql →  ● free_form_sql$subexpression$1
    other_clause$ebnf$1 → other_clause$ebnf$1 ● free_form_sql
    other_clause → %RESERVED_CLAUSE ● other_clause$ebnf$1
    clause$subexpression$1 →  ● other_clause
    clause →  ● clause$subexpression$1
    expressions_or_clauses$ebnf$2 → expressions_or_clauses$ebnf$2 ● clause
    expressions_or_clauses → expressions_or_clauses$ebnf$1 ● expressions_or_clauses$ebnf$2
    statement →  ● expressions_or_clauses statement$subexpression$1
    main$ebnf$1 → main$ebnf$1 ● statement
    main →  ● main$ebnf$1
A QUOTED_IDENTIFIER token based on:
    identifier$subexpression$1 →  ● %QUOTED_IDENTIFIER
    identifier →  ● identifier$subexpression$1
    property_access$subexpression$1 →  ● identifier
    property_access → expression _ %DOT _ ● property_access$subexpression$1
    asteriskless_andless_expression$subexpression$1 →  ● property_access
    asteriskless_andless_expression →  ● asteriskless_andless_expression$subexpression$1
    asteriskless_free_form_sql$subexpression$1 →  ● asteriskless_andless_expression
    asteriskless_free_form_sql →  ● asteriskless_free_form_sql$subexpression$1
    free_form_sql$subexpression$1 →  ● asteriskless_free_form_sql
    free_form_sql →  ● free_form_sql$subexpression$1
    other_clause$ebnf$1 → other_clause$ebnf$1 ● free_form_sql
    other_clause → %RESERVED_CLAUSE ● other_clause$ebnf$1
    clause$subexpression$1 →  ● other_clause
    clause →  ● clause$subexpression$1
    expressions_or_clauses$ebnf$2 → expressions_or_clauses$ebnf$2 ● clause
    expressions_or_clauses → expressions_or_clauses$ebnf$1 ● expressions_or_clauses$ebnf$2
    statement →  ● expressions_or_clauses statement$subexpression$1
    main$ebnf$1 → main$ebnf$1 ● statement
    main →  ● main$ebnf$1
A VARIABLE token based on:
    identifier$subexpression$1 →  ● %VARIABLE
    identifier →  ● identifier$subexpression$1
    property_access$subexpression$1 →  ● identifier
    property_access → expression _ %DOT _ ● property_access$subexpression$1
    asteriskless_andless_expression$subexpression$1 →  ● property_access
    asteriskless_andless_expression →  ● asteriskless_andless_expression$subexpression$1
    asteriskless_free_form_sql$subexpression$1 →  ● asteriskless_andless_expression
    asteriskless_free_form_sql →  ● asteriskless_free_form_sql$subexpression$1
    free_form_sql$subexpression$1 →  ● asteriskless_free_form_sql
    free_form_sql →  ● free_form_sql$subexpression$1
    other_clause$ebnf$1 → other_clause$ebnf$1 ● free_form_sql
    other_clause → %RESERVED_CLAUSE ● other_clause$ebnf$1
    clause$subexpression$1 →  ● other_clause
    clause →  ● clause$subexpression$1
    expressions_or_clauses$ebnf$2 → expressions_or_clauses$ebnf$2 ● clause
    expressions_or_clauses → expressions_or_clauses$ebnf$1 ● expressions_or_clauses$ebnf$2
    statement →  ● expressions_or_clauses statement$subexpression$1
    main$ebnf$1 → main$ebnf$1 ● statement
    main →  ● main$ebnf$1
]
`;

exports[`parser and printer > should format all fixtures > 279.sql 1`] = `
"-- create db
CREATE DATABASE test_db;

-- connect test_db
\\\\c test_db
-- create schema
CREATE SCHEMA test;
"
`;

exports[`parser and printer > should format all fixtures > basic.sql 1`] = `
"-- this is a comment
SELECT
  *
FROM
  tbl
WHERE
  foo = 'bar';

UPDATE a
SET
  id = 1
WHERE
  name IN (
    SELECT
      name
    FROM
      b
  )
"
`;
